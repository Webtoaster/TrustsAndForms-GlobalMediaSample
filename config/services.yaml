# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.project_dir:                   '%kernel.project_dir%'
    app.atf_license_path:              '/public/licenses/'
    
    app.admin_email_address:           '%env(ADMIN_EMAIL_ADDRESS)%'
    app.admin_email_name:              '%env(ADMIN_EMAIL_NAME)%'
    
    app.signup_email_address:          '%env(SIGNUP_EMAIL_ADDRESS)%'
    app.signup_email_name:             '%env(SIGNUP_EMAIL_NAME)%'
    
    app.database_user:                 '%env(DATABASE_USER)%'
    app.database_password:             '%env(DATABASE_PASSWORD)%'
    app.database_host:                 '%env(DATABASE_HOST)%'
    app.database_port:                 '%env(DATABASE_PORT)%'
    app.database_name:                 '%env(DATABASE_NAME)%'
    app.database_driver:               '%env(DATABASE_DRIVER)'
    app.database_version:              '%env(DATABASE_VERSION)'
    app.database_charset:              '%env(DATABASE_CHARSET)'
    
    app.fake_password:                 '%env(FAKE_PASSWORD)%'
    
    mongodb_server:                    '%env(MONGODB_URL)%'
    container.dumper.inline_factories: true








services:
    # default configuration for services in *this* file
    _defaults:
        autowire:      true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    #   See this for more information:  https://symfony.com/doc/current/session/database.html
    
    #   If you want to use PDO (MySQL) Session handler
    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'
 
            
            # If you want to use MongoDB Session handler
            #    Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler:
            #        arguments:
            #            - '@doctrine_mongodb.odm.default_connection'
            
            
            
            #   If you want to use REDIS Session handler
            #    Redis:
            #        class: Redis # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
            #        calls:
            #            -   connect:
            #                    - '%env(REDIS_HOST)%'
            #                    - '%env(int:REDIS_PORT)%'
            
            # uncomment the following if your Redis server requires a password
            # - auth:
            #     - '%env(REDIS_PASSWORD)%'.
    
    #   ^^^^^^  This points to the service above  ^^^^^
#    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
#        arguments:
#            - '@Redis'